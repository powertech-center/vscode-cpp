{
  "name": "powercpp",
  "displayName": "PowerTech C/C++",
  "description": "Powerful C/C++ Extension for Modern Developers",
  "version": "0.0.0",
  "publisher": "PowerTech",
  "author": {
    "name": "PowerTech - https://powertech.center"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/powertech-center/vscode-cpp"
  },
  "bugs": {
    "url": "https://github.com/powertech-center/vscode-cpp/issues"
  },
  "homepage": "https://powertech.center/clang",
  "keywords": [],
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "icon.jpg",
  "activationEvents": [
    "onCommand:cmake.activeFolderName",
    "onCommand:cmake.activeFolderPath",
    "onCommand:cmake.activeConfigurePresetName",
    "onCommand:cmake.activeBuildPresetName",
    "onCommand:cmake.activeTestPresetName",
    "onCommand:cmake.build",
    "onCommand:cmake.buildAll",
    "onCommand:cmake.buildWithTarget",
    "onCommand:cmake.showBuildCommand",
    "onCommand:cmake.clean",
    "onCommand:cmake.cleanAll",
    "onCommand:cmake.cleanConfigure",
    "onCommand:cmake.cleanConfigureAll",
    "onCommand:cmake.cleanRebuild",
    "onCommand:cmake.cleanRebuildAll",
    "onCommand:cmake.configure",
    "onCommand:cmake.configureAll",
    "onCommand:cmake.showConfigureCommand",
    "onCommand:cmake.ctest",
    "onCommand:cmake.ctestAll",
    "onCommand:cmake.debugTarget",
    "onCommand:cmake.debugTargetAll",
    "onCommand:cmake.editCache",
    "onCommand:cmake.editCacheUI",
    "onCommand:cmake.editKits",
    "onCommand:cmake.viewLog",
    "onCommand:cmake.install",
    "onCommand:cmake.installAll",
    "onCommand:cmake.buildTargetName",
    "onCommand:cmake.launchTarget",
    "onCommand:cmake.launchTargetAll",
    "onCommand:cmake.launchTargetPath",
    "onCommand:cmake.launchTargetDirectory",
    "onCommand:cmake.launchTargetFilename",
    "onCommand:cmake.getLaunchTargetPath",
    "onCommand:cmake.getLaunchTargetDirectory",
    "onCommand:cmake.getLaunchTargetFilename",
    "onCommand:cmake.buildType",
    "onCommand:cmake.buildDirectory",
    "onCommand:cmake.executableTargets",
    "onCommand:cmake.buildKit",
    "onCommand:cmake.tasksBuildCommand",
    "onCommand:cmake.quickStart",
    "onCommand:cmake.resetState",
    "onCommand:cmake.scanForKits",
    "onCommand:cmake.selectActiveFolder",
    "onCommand:cmake.selectLaunchTarget",
    "onCommand:cmake.setVariant",
    "onCommand:cmake.setVariantAll",
    "onCommand:cmake.stop",
    "onCommand:cmake.stopAll",
    "onCommand:cmake.outline.configureAll",
    "onCommand:cmake.outline.buildAll",
    "workspaceContains:CMakeLists.txt",
	"onLanguage:cmake",
    "workspaceContains:BUILD.gn",
    "onLanguage:gn",
    "workspaceContains:*.gyp",
    "onLanguage:gyp",
    "workspaceContains:build.ninja",
    "onLanguage:ninja",
    "workspaceContains:build.Makefile",
    "workspaceContains:build.makefile",
    "workspaceContains:build.GNUmakefile",
    "onLanguage:makefile",
    "onLanguage:c",
    "onLanguage:cpp",
    "onLanguage:cuda-cpp",
    "onLanguage:objective-c",
    "onLanguage:objective-cpp",
    "onDebug",
    "onUri",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "cmake",
        "extensions": [
          ".cmake"
        ],
        "filenames": [
          "CMakelists.txt"
        ],
        "aliases": [
          "CMake"
        ]
      },
      {
        "id": "gn",
        "extensions": [
          ".gn",
          ".gni"
        ],
        "configuration": "./language/gn-configuration.json",
        "aliases": [
          "GN"
        ]
      },
      {
        "id": "gyp",
        "extensions": [
          ".gyp",
          ".gypi"
        ],
        "aliases": [
          "GYP"
        ]
      },
      {
        "id": "ninja",
        "extensions": [
          ".ninja"
        ],
        "configuration": "./languages/ninja-configuration.json",
        "aliases": [
          "Ninja"
        ]
      },
      {
        "id": "makefile",
        "filenames": [
          "Makefile",
          "makefile",
          "GNUmakefile"
        ],
        "firstLine": "^#!\\s*/usr/bin/make",
        "configuration": "./language/make-configuration.json",
        "aliases": [
          "Makefile"
        ]
      },
      {
        "id": "llvm.disassembly",
        "extensions": [
          ".disasm"
        ],
        "aliases": [
          "Disassembly"
        ]
      }
    ],
    "grammars": [
      {
        "language": "cmake",
        "scopeName": "source.cmake",
        "path": "languages/CMake.tmLanguage"
      },
      {
        "language": "gn",
        "scopeName": "source.gn",
        "path": "./languages/GN.tmLanguage.json"
      },
      {
        "language": "ninja",
        "scopeName": "source.ninja",
        "path": "./languages/ninja.tmLanguage"
      },
      {
        "language": "makefile",
        "scopeName": "source.makefile",
        "path": "./languages/make.tmLanguage.json",
        "tokenTypes": {
          "string.interpolated": "other"
        }
      },
      {
        "language": "llvm.disassembly",
        "scopeName": "source.disassembly",
        "path": "./languages/disassembly.json"
      }
    ],
    "commands": [
      {
        "category": "CMake",
        "command": "cpp.cmakeClean",
        "title": "Clean"
      },
      {
        "category": "CMake",
        "command": "cpp.cmakeRelease",
        "title": "Build CMAKE_BUILD_TYPE=Release"
      },
      {
        "category": "CMake",	  
        "command": "cpp.cmakeDebug",
        "title": "Debug after build CMAKE_BUILD_TYPE=Debug"
      },
      {
        "category": "CMake",	  
        "command": "cpp.cmakeRebug",
        "title": "Debug after build CMAKE_BUILD_TYPE=RelWithDebInfo"
      },
      {
        "category": "CMake",
        "command": "cpp.cmakeMinimize",
        "title": "Build CMAKE_BUILD_TYPE=MinSizeRel"
      },	
      {
        "command": "cmake.activeFolderName",
        "title": "Get active folder name",
        "category": "CMake"
      },
      {
        "command": "cmake.activeFolderPath",
        "title": "Get active folder path",
        "category": "CMake"
      },
      {
        "command": "cmake.openCMakePresets",
        "title": "%cmake-tools.command.cmake.openCMakePresets.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.addConfigurePreset",
        "title": "%cmake-tools.command.cmake.addConfigurePreset.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.addBuildPreset",
        "title": "%cmake-tools.command.cmake.addBuildPreset.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.addTestPreset",
        "title": "%cmake-tools.command.cmake.addTestPreset.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.selectConfigurePreset",
        "title": "%cmake-tools.command.cmake.selectConfigurePreset.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.selectBuildPreset",
        "title": "%cmake-tools.command.cmake.selectBuildPreset.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.selectTestPreset",
        "title": "%cmake-tools.command.cmake.selectTestPreset.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.viewLog",
        "title": "%cmake-tools.command.cmake.viewLog.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.logDiagnostics",
        "title": "%cmake-tools.command.cmake.logDiagnostics.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.selectActiveFolder",
        "title": "%cmake-tools.command.cmake.selectActiveFolder.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.editKits",
        "title": "%cmake-tools.command.cmake.editKits.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.scanForKits",
        "title": "%cmake-tools.command.cmake.scanForKits.title%",
        "when": "cmake:enableFullFeatureSet && !useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.scanForCompilers",
        "title": "%cmake-tools.command.cmake.scanForCompilers.title%",
        "when": "cmake:enableFullFeatureSet && useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.selectKit",
        "title": "%cmake-tools.command.cmake.selectKit.title%",
        "when": "cmake:enableFullFeatureSet && !useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.setVariant",
        "title": "%cmake-tools.command.cmake.setVariant.title%",
        "when": "cmake:enableFullFeatureSet && !useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.setVariantAll",
        "title": "%cmake-tools.command.cmake.setVariantAll.title%",
        "when": "cmake:enableFullFeatureSet && !useCMakePresets",
        "category": "CMake"
      },
      {
        "command": "cmake.configure",
        "title": "%cmake-tools.command.cmake.configure.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.showConfigureCommand",
        "title": "%cmake-tools.command.cmake.showConfigureCommand.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.configureAll",
        "title": "%cmake-tools.command.cmake.configureAll.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.outline.configure",
        "title": "%cmake-tools.command.cmake.configure.title%",
        "icon": {
          "dark": "res/dark/configure-icon.svg",
          "light": "res/light/configure-icon.svg"
        }
      },
      {
        "command": "cmake.outline.configureAll",
        "title": "%cmake-tools.command.cmake.configureAll.title%",
        "icon": {
          "dark": "res/dark/configure-icon.svg",
          "light": "res/light/configure-icon.svg"
        }
      },
      {
        "command": "cmake.build",
        "title": "%cmake-tools.command.cmake.build.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.showBuildCommand",
        "title": "%cmake-tools.command.cmake.showBuildCommand.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.buildAll",
        "title": "%cmake-tools.command.cmake.buildAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.buildNamedTarget",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.buildNamedTarget.title%"
      },
      {
        "command": "cmake.outline.build",
        "title": "%cmake-tools.command.cmake.build.title%",
        "when": "cmake:enableFullFeatureSet",
        "icon": {
          "dark": "res/dark/build-icon.svg",
          "light": "res/light/build-icon.svg"
        }
      },
      {
        "command": "cmake.outline.buildAll",
        "title": "%cmake-tools.command.cmake.buildAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "icon": {
          "dark": "res/dark/build-icon.svg",
          "light": "res/light/build-icon.svg"
        }
      },
      {
        "command": "cmake.compileFile",
        "title": "%cmake-tools.command.cmake.compileFile.title%",
        "category": "CMake",
        "when": "cmake:enableFullFeatureSet",
        "icon": {
          "dark": "res/dark/build-icon.svg",
          "light": "res/light/build-icon.svg"
        }
      },
      {
        "command": "cmake.outline.compileFile",
        "title": "%cmake-tools.command.cmake.outline.compileFile.title%",
        "when": "cmake:enableFullFeatureSet",
        "icon": {
          "dark": "res/dark/build-icon.svg",
          "light": "res/light/build-icon.svg"
        }
      },
      {
        "command": "cmake.outline.selectWorkspace",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.selectActiveFolder.title%",
        "icon": "$(gear)"
      },
      {
        "command": "cmake.install",
        "title": "%cmake-tools.command.cmake.install.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.installAll",
        "title": "%cmake-tools.command.cmake.installAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.buildWithTarget",
        "title": "%cmake-tools.command.cmake.buildWithTarget.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.setDefaultTarget",
        "title": "%cmake-tools.command.cmake.setDefaultTarget.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.cleanConfigure",
        "title": "%cmake-tools.command.cmake.cleanConfigure.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.cleanConfigureAll",
        "title": "%cmake-tools.command.cmake.cleanConfigureAll.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.outline.cleanConfigure",
        "title": "%cmake-tools.command.cmake.outline.cleanConfigure.title%"
      },
      {
        "command": "cmake.outline.cleanConfigureAll",
        "title": "%cmake-tools.command.cmake.outline.cleanConfigureAll.title%"
      },
      {
        "command": "cmake.clean",
        "title": "%cmake-tools.command.cmake.clean.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.cleanAll",
        "title": "%cmake-tools.command.cmake.cleanAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.outline.clean",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.clean.title%"
      },
      {
        "command": "cmake.outline.cleanAll",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.cleanAll.title%"
      },
      {
        "command": "cmake.cleanRebuild",
        "title": "%cmake-tools.command.cmake.cleanRebuild.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.cleanRebuildAll",
        "title": "%cmake-tools.command.cmake.cleanRebuildAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.outline.cleanRebuild",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.cleanRebuild.title%"
      },
      {
        "command": "cmake.outline.cleanRebuildAll",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.cleanRebuildAll.title%"
      },
      {
        "command": "cmake.editCacheUI",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.editCacheUI.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.outline.editCacheUI",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.editCacheUI.title%"
      },
      {
        "command": "cmake.ctest",
        "title": "%cmake-tools.command.cmake.ctest.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.ctestAll",
        "title": "%cmake-tools.command.cmake.ctestAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.editCache",
        "title": "%cmake-tools.command.cmake.editCache.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.quickStart",
        "title": "%cmake-tools.command.cmake.quickStart.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.debugTarget",
        "title": "%cmake-tools.command.cmake.debugTarget.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.debugTargetAll",
        "title": "%cmake-tools.command.cmake.debugTargetAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.launchTarget",
        "title": "%cmake-tools.command.cmake.launchTarget.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.launchTargetAll",
        "title": "%cmake-tools.command.cmake.launchTargetAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.selectLaunchTarget",
        "title": "%cmake-tools.command.cmake.selectLaunchTarget.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.stop",
        "title": "%cmake-tools.command.cmake.stop.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.stopAll",
        "title": "%cmake-tools.command.cmake.stopAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "category": "CMake"
      },
      {
        "command": "cmake.outline.stop",
        "title": "%cmake-tools.command.cmake.stop.title%",
        "when": "cmake:enableFullFeatureSet",
        "icon": {
          "dark": "res/dark/stop-icon.svg",
          "light": "res/light/stop-icon.svg"
        }
      },
      {
        "command": "cmake.outline.stopAll",
        "title": "%cmake-tools.command.cmake.stopAll.title%",
        "when": "cmake:enableFullFeatureSet",
        "icon": {
          "dark": "res/dark/stop-icon.svg",
          "light": "res/light/stop-icon.svg"
        }
      },
      {
        "command": "cmake.resetState",
        "title": "%cmake-tools.command.cmake.resetState.title%",
        "category": "CMake"
      },
      {
        "command": "cmake.outline.buildTarget",
        "title": "%cmake-tools.command.cmake.build.title%",
        "when": "cmake:enableFullFeatureSet",
        "icon": {
          "dark": "res/dark/build-icon.svg",
          "light": "res/light/build-icon.svg"
        }
      },
      {
        "command": "cmake.outline.runUtilityTarget",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.outline.runUtilityTarget.title%"
      },
      {
        "command": "cmake.outline.debugTarget",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.outline.debugTarget.title%"
      },
      {
        "command": "cmake.outline.launchTarget",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.outline.launchTarget.title%"
      },
      {
        "command": "cmake.outline.setDefaultTarget",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.outline.setDefaultTarget.title%"
      },
      {
        "command": "cmake.outline.setLaunchTarget",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.outline.setLaunchTarget.title%"
      },
      {
        "command": "cmake.outline.revealInCMakeLists",
        "when": "cmake:enableFullFeatureSet",
        "title": "%cmake-tools.command.cmake.outline.revealInCMakeLists.title%"
      },

      {
        "category": "GN",
        "command": "cpp.gnClean",
        "title": "Clean"
      },
      {
        "category": "GN",
        "command": "cpp.gnRelease",
        "title": "Build Release"
      },
      {
        "category": "GN",
        "command": "cpp.gnDebug",
        "title": "Debug after build Debug"
      },
      {
        "category": "GYP",
        "command": "cpp.gypClean",
        "title": "Clean"
      },
      {
        "category": "GYP",
        "command": "cpp.gypRelease",
        "title": "Build Release"
      },
      {
        "category": "GYP",
        "command": "cpp.gypDebug",
        "title": "Debug after build Debug"
      },
      {
        "category": "Ninja",
        "command": "cpp.ninjaClean",
        "title": "Clean"
      },
      {
        "category": "Ninja",
        "command": "cpp.ninjaRelease",
        "title": "Build Release"
      },
      {
        "category": "Ninja",
        "command": "cpp.ninjaDebug",
        "title": "Debug after build Debug"
      },
      {
        "category": "Makefile",
        "command": "cpp.makefileClean",
        "title": "Clean"
      },
      {
        "category": "Makefile",
        "command": "cpp.makefileRelease",
        "title": "Build Release"
      },
      {
        "category": "Makefile",
        "command": "cpp.makefileDebug",
        "title": "Debug after build Debug"
      },
      {
        "category": "C/C++",
        "command": "cpp.switchheadersource",
        "title": "Switch Between Source/Header"
      },
      {
        "category": "C/C++",
        "command": "cpp.lsprestart",
        "title": "Restart language server"
      },
      {
        "category": "C/C++",
        "command": "cpp.typeHierarchy",
        "title": "Open Type Hierarchy"
      },
      {
        "category": "C/C++",
        "command": "cpp.typeHierarchy.viewParents",
        "title": "Types: Show Base Classes",
        "icon": "$(triangle-up)"
      },
      {
        "category": "C/C++",
        "command": "cpp.typeHierarchy.viewChildren",
        "title": "Types: Show Derived Classes",
        "icon": "$(triangle-down)"
      },
      {
        "category": "C/C++",
        "command": "cpp.typeHierarchy.close",
        "title": "Types: Close Hierarchy",
        "icon": "$(panel-close)"
      },
      {
        "category": "C/C++",
        "command": "cpp.memoryUsage",
        "title": "Show memory usage",
        "enablement": "cpp.memoryUsage.supported",
        "icon": "$(refresh)"
      },
      {
        "category": "C/C++",
        "command": "cpp.memoryUsage.close",
        "title": "Close memory usage",
        "icon": "$(panel-close)"
      },
      {
        "category": "C/C++",
        "command": "cpp.ast",
        "title": "Show AST",
        "enablement": "cpp.ast.supported",
        "icon": "$(list-tree)"
      },
      {
        "category": "C/C++",
        "command": "cpp.ast.close",
        "title": "Close AST",
        "icon": "$(panel-close)"
      },
      {
        "category": "Debug",
        "title": "Copy Value",
        "command": "cpp.dbgModules.copyValue"
      },
      {
        "category": "Debug",
        "title": "Open LLDB terminal",
        "command": "cpp.dbgOpenTerminal"
      },
      {
        "category": "Debug",
        "title": "Search Symbols...",
        "command": "cpp.dbgSearchSymbols",
        "enablement": "debugType == 'powercpp'"
      },
      {
        "category": "Debug",
        "title": "View Memory...",
        "command": "cpp.dbgViewMemory",
        "enablement": "debugType == 'powercpp'"
      }
    ],

    "taskDefinitions": [
      {
        "type": "cmake",
        "required": [
          "command"
        ],
        "properties": {
          "cmake.cmakePath": {
            "type": "string",
            "default": "cmake",
            "description": "The path to CMake generator executable"
          },
          "label": {
            "type": "string",
            "description": "%cmake-tools.taskDefinitions.properties.label.description%"
          },
          "command": {
            "type": "string",
            "enum": [
              "build",
              "configure",
              "install",
              "test",
              "clean",
              "cleanRebuild"
            ],
            "description": "%cmake-tools.taskDefinitions.properties.command.description%"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "%cmake-tools.taskDefinitions.properties.targets.description%"
          },
          "preset": {
            "type": "string",
            "description": "%cmake-tools.taskDefinitions.properties.preset.description%"
          },
          "options": {
            "type": "object",
            "description": "%cmake-tools.taskDefinitions.properties.options.description",
            "properties": {
              "cwd": {
                "type": "string",
                "description": "%cmake-tools.taskDefinitions.properties.options.cwd.description%"
              },
              "environment": {
                "type": "object",
                "markdownDescription": "%cmake-tools.taskDefinitions.properties.options.environment.markdownDescription%"
              }
            }
          },
          "detail": {
            "type": "string",
            "description": "%cmake-tools.taskDefinitions.properties.details.description%"
          }
        }
      }
    ],

    "keybindings": [
      {
        "key": "f7",
        "when": "!cmake:hideBuildCommand && cmake:enableFullFeatureSet",
        "command": "cmake.build"
      },
      {
        "key": "shift+f7",
        "when": "!cmake:hideBuildCommand && cmake:enableFullFeatureSet",
        "command": "cmake.buildWithTarget"
      },
      {
        "key": "ctrl+f5",
        "command": "cmake.debugTarget",
        "when": "!inDebugMode && inCMakeProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"
      },
      {
        "key": "shift+f5",
        "command": "cmake.launchTarget",
        "when": "!inDebugMode && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"
      },

      {
        "command": "cpp.switchheadersource",
        "key": "Alt+o",
        "when": "editorTextFocus"
      },
      {
        "command": "cpp.typeHierarchy",
        "key": "Shift+Alt+t",
        "when": "editorTextFocus"
      }
    ],

    "viewsContainers": {
      "activitybar": [
        {
          "id": "cmake__viewContainer",
          "title": "CMake",
          "icon": "res/cmake-view-icon.svg",
          "when": "cmake:enableFullFeatureSet"
        }
      ]
    },

    "views": {
      "cmake__viewContainer": [
        {
          "id": "cmake.outline",
          "name": "%cmake-tools.configuration.views.cmake.outline.description%",
          "when": "cmake:enableFullFeatureSet"
        }
      ],

      "explorer": [
        {
          "id": "cpp.typeHierarchyView",
          "name": "Type Hierarchy",
          "when": "cpp.typeHierarchyVisible"
        },
        {
          "id": "cpp.memoryUsage",
          "name": "Show Memory Usage",
          "when": "cpp.memoryUsage.hasData"
        },
        {
          "id": "cpp.ast",
          "name": "AST",
          "when": "cpp.ast.hasData"
        }
      ],
      "debug": [
        {
          "id": "loadedModules",
          "name": "Modules",
          "when": "debugType == 'powercpp'"
        }
      ]
    },

    "yamlValidation": [
      {
        "fileMatch": "cmake-variants.yaml",
        "url": "cmake-tools-schema:///schemas/variants-schema.json"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "cmake-variants.json",
        "url": "cmake-tools-schema:///schemas/variants-schema.json"
      },
      {
        "fileMatch": "cmake-variants.yaml",
        "url": "cmake-tools-schema:///schemas/variants-schema.json"
      },
      {
        "fileMatch": "cmake-kits.json",
        "url": "cmake-tools-schema:///schemas/kits-schema.json"
      },
      {
        "fileMatch": "CMakePresets.json",
        "url": "cmake-tools-schema:///schemas/CMakePresets-v4-schema.json"
      },
      {
        "fileMatch": "CMakeUserPresets.json",
        "url": "cmake-tools-schema:///schemas/CMakePresets-v4-schema.json"
      }
    ],

    "menus": {
      "editor/context": [
        {
          "command": "cpp.typeHierarchy",
          "when": "resourceLangId == cpp && cpp.enableTypeHierarchy",
          "group": "0_navigation@4",
          "_comment": "see https://github.com/microsoft/vscode-references-view/blob/f63eaed9934ca5ecc8f3fb3ca096f38c6e5e181f/package.json#L162"
        },
        {
          "command": "cpp.switchheadersource",
          "when": "resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp",
          "group": "0_navigation@5"
        },
        {
          "command": "cpp.ast",
          "when": "cpp.ast.supported"
        }
      ],
      "view/title": [
        {
          "command": "cmake.outline.configureAll",
          "when": "view == cmake.outline && !cmake:isBuilding",
          "group": "navigation@1"
        },
        {
          "command": "cmake.outline.buildAll",
          "when": "view == cmake.outline && !cmake:isBuilding && cmake:enableFullFeatureSet",
          "group": "navigation@2"
        },
        {
          "command": "cmake.outline.stopAll",
          "when": "view == cmake.outline && cmake:isBuilding && cmake:enableFullFeatureSet",
          "group": "navigation@3"
        },
        {
          "command": "cmake.outline.cleanAll",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet",
          "group": "1_cmakeOutline"
        },
        {
          "command": "cmake.outline.cleanConfigureAll",
          "when": "view == cmake.outline",
          "group": "1_cmakeOutline"
        },
        {
          "command": "cmake.outline.cleanRebuildAll",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet",
          "group": "1_cmakeOutline"
        },
        {
          "command": "cmake.outline.editCacheUI",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet",
          "group": "1_cmakeOutline"
        },

        {
          "command": "cpp.typeHierarchy.viewParents",
          "when": "view == cpp.typeHierarchyView",
          "group": "navigation"
        },
        {
          "command": "cpp.typeHierarchy.viewChildren",
          "when": "view == cpp.typeHierarchyView",
          "group": "navigation"
        },
        {
          "command": "cpp.typeHierarchy.close",
          "when": "view == cpp.typeHierarchyView",
          "group": "navigation"
        },
        {
          "command": "cpp.memoryUsage.close",
          "when": "view == cpp.memoryUsage",
          "group": "navigation"
        },
        {
          "command": "cpp.memoryUsage",
          "when": "view == cpp.memoryUsage",
          "group": "navigation"
        },
        {
          "command": "cpp.ast.close",
          "when": "view == cpp.ast",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cmake.outline.buildTarget",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true|canRun=true/",
          "group": "inline"
        },
        {
          "command": "cmake.outline.buildTarget",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true/",
          "group": "1_targetActions@1"
        },
        {
          "command": "cmake.outline.runUtilityTarget",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true/",
          "group": "1_targetActions@2"
        },
        {
          "command": "cmake.outline.debugTarget",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/",
          "group": "1_targetActions@3"
        },
        {
          "command": "cmake.outline.launchTarget",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/",
          "group": "1_targetActions@4"
        },
        {
          "command": "cmake.outline.revealInCMakeLists",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /nodeType=target/",
          "group": "1_targetActions@5"
        },
        {
          "command": "cmake.outline.setDefaultTarget",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/",
          "group": "2_targetState@1"
        },
        {
          "command": "cmake.outline.setLaunchTarget",
          "when": "view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/",
          "group": "2_targetState@2"
        },
        {
          "command": "cmake.outline.configureAll",
          "when": "view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/",
          "group": "1_fileActions@1"
        },
        {
          "command": "cmake.outline.buildAll",
          "when": "cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/",
          "group": "1_fileActions@2"
        },
        {
          "command": "cmake.outline.cleanAll",
          "when": "cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/",
          "group": "1_fileActions@3"
        },
        {
          "command": "cmake.outline.cleanConfigureAll",
          "when": "view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/",
          "group": "1_fileActions@4"
        },
        {
          "command": "cmake.outline.cleanRebuildAll",
          "when": "cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/",
          "group": "1_fileActions@5"
        },
        {
          "command": "cmake.outline.compileFile",
          "when": "cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/",
          "group": "1_fileActions@6"
        },
        {
          "command": "cmake.outline.compileFile",
          "when": "cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/",
          "group": "inline"
        },
        {
          "command": "cmake.outline.configureAll",
          "when": "view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/",
          "group": "inline"
        },
        {
          "command": "cmake.outline.selectWorkspace",
          "when": "cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=workspace/ && viewItem =~ /selected=false/",
          "group": "inline"
        },

        {
          "command": "cpp.dbgModules.copyValue",
          "when": "viewItem == cpp.dbgModuleProperty"
        }
      ],

      "editor/title/context": [
        {
          "command": "cmake.compileFile",
          "when": "resourceLangId == cpp && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.compileFile",
          "when": "resourceLangId == c && cmake:enableFullFeatureSet"
        }
      ],
      "editor/title": [
        {
          "command": "cmake.compileFile",
          "when": "resourceLangId == cpp && cmake:enableFullFeatureSet",
          "group": "navigation"
        },
        {
          "command": "cmake.compileFile",
          "when": "resourceLangId == c && cmake:enableFullFeatureSet",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "command": "cmake.compileFile",
          "when": "resourceLangId == cpp && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.compileFile",
          "when": "resourceLangId == c && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.outline.configureAll",
          "when": "resourceFilename == CMakeLists.txt"
        },
        {
          "command": "cmake.outline.buildAll",
          "when": "resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.outline.cleanAll",
          "when": "resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.outline.cleanConfigureAll",
          "when": "resourceFilename == CMakeLists.txt"
        },
        {
          "command": "cmake.outline.cleanRebuildAll",
          "when": "resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"
        }
      ],
      "touchBar": [
        {
          "command": "cmake.quickStart",
          "when": "cmake:enableTouchBar && !cmake:enableFullFeatureSet",
          "group": "CMake:start"
        },
        {
          "command": "cmake.configure",
          "when": "cmake:enableTouchBar.configure && !cmake:isBuilding && !cmake:isConfiguring",
          "group": "CMake:build"
        },
        {
          "command": "cmake.build",
          "alt": "cmake.configure",
          "when": "cmake:enableTouchBar.build && cmake:enableFullFeatureSet && !cmake:isBuilding && !cmake:isConfiguring",
          "group": "CMake:build"
        },
        {
          "command": "cmake.stop",
          "when": "cmake:enableTouchBar.build && cmake:enableFullFeatureSet && cmake:isBuilding",
          "group": "CMake:build"
        },
        {
          "command": "cmake.debugTarget",
          "alt": "cmake.selectLaunchTarget",
          "when": "cmake:enableTouchBar.debug && cmake:enableFullFeatureSet && !cmake:hideDebugCommand",
          "group": "CMake:run"
        },
        {
          "command": "cmake.launchTarget",
          "when": "cmake:enableTouchBar.launch && cmake:enableFullFeatureSet && !cmake:hideLaunchCommand",
          "group": "CMake:run"
        }
      ],

      "commandPalette": [
        {
          "command": "cpp.cmakeClean",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeRelease",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeDebug",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeRebug",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeMinimize",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cmake.openCMakePresets",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "command": "cmake.addConfigurePreset",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "command": "cmake.addBuildPreset",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "command": "cmake.addTestPreset",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "command": "cmake.selectConfigurePreset",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "command": "cmake.selectBuildPreset",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "command": "cmake.selectTestPreset",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.viewLog"
        },
        {
          "command": "cmake.configure"
        },
        {
          "command": "cmake.showConfigureCommand"
        },
        {
          "when": "cmake:enableFullFeatureSet && !useCMakePresets",
          "command": "cmake.scanForKits"
        },
        {
          "command": "cmake.scanForCompilers",
          "when": "cmake:enableFullFeatureSet && useCMakePresets"
        },
        {
          "when": "cmake:enableFullFeatureSet && !useCMakePresets",
          "command": "cmake.selectKit"
        },
        {
          "when": "cmake:enableFullFeatureSet && !useCMakePresets",
          "command": "cmake.editKits"
        },
        {
          "command": "cmake.quickStart"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.selectActiveFolder"
        },
        {
          "command": "cmake.resetState"
        },
        {
          "command": "cmake.configureAll",
          "when": "cmake:multiRoot"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.build"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.showBuildCommand"
        },
        {
          "command": "cmake.buildAll",
          "when": "cmake:multiRoot && cmake:enableFullFeatureSet"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.install"
        },
        {
          "command": "cmake.installAll",
          "when": "cmake:multiRoot && cmake:enableFullFeatureSet"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.buildWithTarget"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.compileFile"
        },
        {
          "when": "cmake:enableFullFeatureSet && !useCMakePresets",
          "command": "cmake.setVariant"
        },
        {
          "command": "cmake.setVariantAll",
          "when": "cmake:multiRoot && cmake:enableFullFeatureSet && !useCMakePresets"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.setDefaultTarget"
        },
        {
          "command": "cmake.cleanConfigure"
        },
        {
          "command": "cmake.cleanConfigureAll",
          "when": "cmake:multiRoot"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.clean"
        },
        {
          "command": "cmake.cleanAll",
          "when": "cmake:multiRoot && cmake:enableFullFeatureSet"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.cleanRebuild"
        },
        {
          "command": "cmake.cleanRebuildAll",
          "when": "cmake:multiRoot && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.editCacheUI",
          "when": "cmake:enableFullFeatureSet"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.ctest"
        },
        {
          "command": "cmake.ctestAll",
          "when": "cmake:multiRoot && cmake:enableFullFeatureSet"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.editCache"
        },
        {
          "command": "cmake.debugTarget",
          "when": "!cmake:hideDebugCommand && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.debugTargetAll",
          "when": "cmake:multiRoot && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.launchTarget",
          "when": "!cmake:hideLaunchCommand && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.launchTargetAll",
          "when": "cmake:multiRoot && !cmake:hideLaunchCommand && cmake:enableFullFeatureSet"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.selectLaunchTarget"
        },
        {
          "when": "cmake:enableFullFeatureSet",
          "command": "cmake.stop"
        },
        {
          "command": "cmake.stopAll",
          "when": "cmake:multiRoot && cmake:enableFullFeatureSet"
        },
        {
          "command": "cmake.outline.configure",
          "when": "never"
        },
        {
          "command": "cmake.outline.configureAll",
          "when": "never"
        },
        {
          "command": "cmake.outline.build",
          "when": "never"
        },
        {
          "command": "cmake.outline.buildAll",
          "when": "never"
        },
        {
          "command": "cmake.outline.compileFile",
          "when": "never"
        },
        {
          "command": "cmake.outline.selectWorkspace",
          "when": "never"
        },
        {
          "command": "cmake.outline.cleanConfigure",
          "when": "never"
        },
        {
          "command": "cmake.outline.cleanConfigureAll",
          "when": "never"
        },
        {
          "command": "cmake.outline.clean",
          "when": "never"
        },
        {
          "command": "cmake.outline.cleanAll",
          "when": "never"
        },
        {
          "command": "cmake.outline.cleanRebuild",
          "when": "never"
        },
        {
          "command": "cmake.outline.cleanRebuildAll",
          "when": "never"
        },
        {
          "command": "cmake.outline.editCacheUI",
          "when": "never"
        },
        {
          "command": "cmake.outline.stop",
          "when": "never"
        },
        {
          "command": "cmake.outline.stopAll",
          "when": "never"
        },
        {
          "command": "cmake.outline.buildTarget",
          "when": "never"
        },
        {
          "command": "cmake.outline.runUtilityTarget",
          "when": "never"
        },
        {
          "command": "cmake.outline.debugTarget",
          "when": "never"
        },
        {
          "command": "cmake.outline.launchTarget",
          "when": "never"
        },
        {
          "command": "cmake.outline.setDefaultTarget",
          "when": "never"
        },
        {
          "command": "cmake.outline.setLaunchTarget",
          "when": "never"
        },
        {
          "command": "cmake.outline.revealInCMakeLists",
          "when": "never"
        },

        {
          "command": "cpp.gnClean",
          "when": "gn:isPoject || editorLangId == gn"
        },
        {
          "command": "cpp.gnRelease",
          "when": "gn:isPoject || editorLangId == gn"
        },
        {
          "command": "cpp.gnDebug",
          "when": "gn:isPoject || editorLangId == gn"
        },
        {
          "command": "cpp.gypClean",
          "when": "gyp:isPoject || editorLangId == gyp"
        },
        {
          "command": "cpp.gypRelease",
          "when": "gyp:isPoject || editorLangId == gyp"
        },
        {
          "command": "cpp.gypDebug",
          "when": "gyp:isPoject || editorLangId == gyp"
        },
        {
          "command": "cpp.ninjaClean",
          "when": "ninja:isPoject || editorLangId == ninja"
        },
        {
          "command": "cpp.ninjaRelease",
          "when": "ninja:isPoject || editorLangId == ninja"
        },
        {
          "command": "cpp.ninjaDebug",
          "when": "ninja:isPoject || editorLangId == ninja"
        },
        {
          "command": "cpp.makefileClean",
          "when": "makefile:isPoject || editorLangId == makefile"
        },
        {
          "command": "cpp.makefileRelease",
          "when": "makefile:isPoject || editorLangId == makefile"
        },
        {
          "command": "cpp.makefileDebug",
          "when": "makefile:isPoject || editorLangId == makefile"
        },
        {
          "command": "cpp.switchheadersource",
          "when": "false"
        },
        {
          "command": "cpp.lsprestart",
          "when": "false"
        },
        {
          "command": "cpp.typeHierarchy.viewParents",
          "when": "resourceLangId == cpp"
        },
        {
          "command": "cpp.typeHierarchy.viewChildren",
          "when": "resourceLangId == cpp"
        },
        {
          "command": "cpp.typeHierarchy.close",
          "when": "false"
        },
        {
          "command": "cpp.memoryUsage",
          "when": "cpp.memoryUsage.supported"
        },
        {
          "command": "cpp.memoryUsage.close",
          "when": "false"
        },
        {
          "command": "cpp.ast",
          "when": "resourceLangId == cpp"
        },
        {
          "command": "cpp.ast.close",
          "when": "false"
        },
        {
          "command": "cpp.dbgModules.copyValue",
          "when": "viewItem == cpp.dbgModuleProperty"
        }
      ]
    },
    "breakpoints": [
      {
        "language": "c"
      },
      {
        "language": "cpp"
      },
      {
        "language": "llvm.disassembly"
      },
      {
        "language": "objective-c"
      },
      {
        "language": "objective-cpp"
      }
    ],
    "configuration": {
      "title": "C/C++",
      "properties": {
        "cmake.autoSelectActiveFolder": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.autoSelectActiveFolder.description%",
          "scope": "window"
        },
        "cmake.buildDirectory": {
          "type": "string",
          "default": "${workspaceFolder}/build",
          "description": "%cmake-tools.configuration.cmake.buildDirectory.description%",
          "scope": "resource"
        },
        "cmake.installPrefix": {
          "type": "string",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.installPrefix.description%",
          "scope": "resource"
        },
        "cmake.sourceDirectory": {
          "type": "string",
          "default": "${workspaceFolder}",
          "description": "%cmake-tools.configuration.cmake.sourceDirectory.description%",
          "scope": "resource"
        },
        "cmake.saveBeforeBuild": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.saveBeforeBuild.description%",
          "scope": "resource"
        },
        "cmake.buildBeforeRun": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.buildBeforeRun.description%",
          "scope": "resource"
        },
        "cmake.clearOutputBeforeBuild": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.clearOutputBeforeBuild.description%",
          "scope": "window"
        },
        "cmake.configureSettings": {
          "type": "object",
          "default": {},
          "description": "%cmake-tools.configuration.cmake.configureSettings.description%",
          "scope": "resource"
        },
        "cmake.cacheInit": {
          "oneOf": [
            {
              "type": "string",
              "description": "%cmake-tools.configuration.cmake.cacheInit.string.description%"
            },
            {
              "type": "array",
              "description": "%cmake-tools.configuration.cmake.cacheInit.array.description%",
              "items": {
                "type": "string",
                "description": "%cmake-tools.configuration.cmake.cacheInit.array.string.description%"
              }
            }
          ],
          "scope": "resource"
        },
        "cmake.preferredGenerators": {
          "type": "array",
          "default": [],
          "description": "%cmake-tools.configuration.cmake.preferredGenerators.description%",
          "scope": "resource"
        },
        "cmake.generator": {
          "type": "string",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.generator.description%",
          "scope": "resource"
        },
        "cmake.toolset": {
          "type": "string",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.toolset.description%",
          "scope": "resource"
        },
        "cmake.platform": {
          "type": "string",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.platform.description%",
          "scope": "resource"
        },
        "cmake.configureArgs": {
          "type": "array",
          "description": "%cmake-tools.configuration.cmake.configureArgs.description%",
          "items": {
            "type": "string",
            "title": "CMake Arguments"
          },
          "default": [],
          "scope": "resource"
        },
        "cmake.buildArgs": {
          "type": "array",
          "description": "%cmake-tools.configuration.cmake.buildArgs.description%",
          "items": {
            "type": "string"
          },
          "default": [],
          "scope": "resource"
        },
        "cmake.buildToolArgs": {
          "type": "array",
          "description": "%cmake-tools.configuration.cmake.buildToolArgs.description%",
          "items": {
            "type": "string"
          },
          "default": [],
          "scope": "resource"
        },
        "cmake.parallelJobs": {
          "type": "number",
          "default": 0,
          "description": "%cmake-tools.configuration.cmake.parallelJobs.description%",
          "scope": "resource"
        },
        "cmake.ctestPath": {
          "type": "string",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.ctestPath.description%",
          "scope": "resource"
        },
        "cmake.ctest.parallelJobs": {
          "type": "number",
          "default": 0,
          "description": "%cmake-tools.configuration.cmake.ctest.parallelJobs.description%",
          "scope": "resource"
        },
        "cmake.parseBuildDiagnostics": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.parseBuildDiagnostics.description%",
          "scope": "resource"
        },
        "cmake.enabledOutputParsers": {
          "type": "array",
          "markdownDescription": "%cmake-tools.configuration.cmake.enabledOutputParsers.description%",
          "items": {
            "type": "string",
            "enum": [
              "cmake",
              "gcc",
              "gnuld",
              "msvc",
              "ghs",
              "diab",
              "iar"
            ]
          },
          "default": [
            "cmake",
            "gcc",
            "gnuld",
            "msvc",
            "ghs",
            "diab"
          ],
          "scope": "resource"
        },
        "cmake.debugConfig": {
          "type": "object",
          "description": "%cmake-tools.configuration.cmake.debugConfig.description%",
          "properties": {
            "symbolSearchPath": {
              "type": "string",
              "description": "%cmake-tools.configuration.cmake.debugConfig.symbolSearchPath.description%"
            },
            "additionalSOLibSearchPath": {
              "type": "string",
              "description": "%cmake-tools.configuration.cmake.debugConfig.additionalSOLibSearchPath.description%"
            },
            "externalConsole": {
              "type": "boolean",
              "description": "%cmake-tools.configuration.cmake.debugConfig.externalConsole.description%"
            },
            "console": {
              "type": "string",
              "enum": [
                "internalConsole",
                "integratedTerminal",
                "externalTerminal",
                "newExternalWindow"
              ],
              "enumDescriptions": [
                "%cmake-tools.configuration.cmake.debugConfig.console.internalConsole.description%",
                "%cmake-tools.configuration.cmake.debugConfig.console.integratedTerminal.description%",
                "%cmake-tools.configuration.cmake.debugConfig.console.externalTerminal.description%",
                "%cmake-tools.configuration.cmake.debugConfig.console.newExternalWindow.description%"
              ],
              "markdownDescription": "%cmake-tools.configuration.cmake.debugConfig.console.description%"
            },
            "logging": {
              "type": "object",
              "description": "%cmake-tools.configuration.cmake.debugConfig.logging.description%",
              "properties": {
                "exceptions": {
                  "type": "boolean",
                  "default": true
                },
                "moduleLoad": {
                  "type": "boolean",
                  "default": true
                },
                "programOutput": {
                  "type": "boolean",
                  "default": true
                },
                "engineLogging": {
                  "type": "boolean",
                  "default": false
                },
                "trace": {
                  "type": "boolean",
                  "default": false
                },
                "traceResponse": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "visualizerFile": {
              "type": "string",
              "description": "%cmake-tools.configuration.cmake.debugConfig.visualizerFile.description%"
            },
            "args": {
              "type": "array",
              "description": "%cmake-tools.configuration.cmake.debugConfig.args.description%",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "cwd": {
              "type": "string",
              "description": "%cmake-tools.configuration.cmake.debugConfig.cwd.description%"
            },
            "environment": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "%cmake-tools.configuration.cmake.debugConfig.environment.name.description%"
                  },
                  "value": {
                    "type": "string",
                    "description": "%cmake-tools.configuration.cmake.debugConfig.environment.value.description%"
                  }
                }
              }
            },
            "MIMode": {
              "type": "string",
              "enum": [
                "gdb",
                "lldb"
              ]
            },
            "miDebuggerPath": {
              "type": "string",
              "description": "%cmake-tools.configuration.cmake.debugConfig.miDebuggerPath.description%"
            },
            "stopAtEntry": {
              "type": "boolean",
              "description": "%cmake-tools.configuration.cmake.debugConfig.stopAtEntry.description%",
              "default": false
            },
            "setupCommands": {
              "type": "array",
              "description": "%cmake-tools.configuration.cmake.debugConfig.setupCommands.description%",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "%cmake-tools.configuration.cmake.debugConfig.setupCommands.text.description%"
                  },
                  "description": {
                    "type": "string",
                    "description": "%cmake-tools.configuration.cmake.debugConfig.setupCommands.description.description%"
                  },
                  "ignoreFailures": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            },
            "customLaunchSetupCommands": {
              "type": "array",
              "description": "%cmake-tools.configuration.cmake.debugConfig.setupCommands.description%",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "%cmake-tools.configuration.cmake.debugConfig.setupCommands.text.description%"
                  },
                  "description": {
                    "type": "string",
                    "description": "%cmake-tools.configuration.cmake.debugConfig.setupCommands.description.description%"
                  },
                  "ignoreFailures": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            },
            "launchCompleteCommand": {
              "type": "string"
            },
            "dumpPath": {
              "type": "string"
            },
            "coreDumpPath": {
              "type": "string"
            }
          },
          "scope": "resource"
        },
        "cmake.defaultVariants": {
          "type": "object",
          "$schema": "cmake-tools-schema://schemas/variants-schema.json",
          "default": {
            "buildType": {
              "default": "debug",
              "description": "%cmake-tools.configuration.cmake.defaultVariants.buildType.description%",
              "choices": {
                "debug": {
                  "short": "Debug",
                  "long": "%cmake-tools.configuration.cmake.defaultVariants.buildType.debug.long%",
                  "buildType": "Debug"
                },
                "release": {
                  "short": "Release",
                  "long": "%cmake-tools.configuration.cmake.defaultVariants.buildType.release.long%",
                  "buildType": "Release"
                },
                "minsize": {
                  "short": "MinSizeRel",
                  "long": "%cmake-tools.configuration.cmake.defaultVariants.buildType.minsize.long%",
                  "buildType": "MinSizeRel"
                },
                "reldeb": {
                  "short": "RelWithDebInfo",
                  "long": "%cmake-tools.configuration.cmake.defaultVariants.buildType.reldeb.long%",
                  "buildType": "RelWithDebInfo"
                }
              }
            }
          },
          "scope": "resource"
        },
        "cmake.ctestArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "%cmake-tools.configuration.cmake.ctestArgs.description%",
          "default": [],
          "scope": "resource"
        },
        "cmake.ctestDefaultArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "%cmake-tools.configuration.cmake.ctestDefaultArgs.description%",
          "default": [
            "-T",
            "test",
            "--output-on-failure"
          ],
          "scope": "machine"
        },
        "cmake.environment": {
          "type": "object",
          "default": {},
          "description": "%cmake-tools.configuration.cmake.environment.description%",
          "additionalProperties": {
            "type": "string",
            "description": "%cmake-tools.configuration.cmake.environment.additionalProperties.description%"
          },
          "scope": "resource"
        },
        "cmake.configureEnvironment": {
          "type": "object",
          "default": {},
          "description": "%cmake-tools.configuration.cmake.configureEnvironment.description%",
          "additionalProperties": {
            "type": "string",
            "description": "%cmake-tools.configuration.cmake.environment.additionalProperties.description%"
          },
          "scope": "resource"
        },
        "cmake.buildEnvironment": {
          "type": "object",
          "default": {},
          "description": "%cmake-tools.configuration.cmake.buildEnvironment.description%",
          "additionalProperties": {
            "type": "string",
            "description": "%cmake-tools.configuration.cmake.environment.additionalProperties.description%"
          },
          "scope": "resource"
        },
        "cmake.testEnvironment": {
          "type": "object",
          "default": {},
          "description": "%cmake-tools.configuration.cmake.testEnvironment.description%",
          "additionalProperties": {
            "type": "string",
            "description": "%cmake-tools.configuration.cmake.environment.additionalProperties.description%"
          },
          "scope": "resource"
        },
        "cmake.mingwSearchDirs": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "%cmake-tools.configuration.cmake.searchDirs.items.description%"
          },
          "default": [
            "${env:SystemDrive}/MinGW"
          ],
          "description": "%cmake-tools.configuration.cmake.mingwSearchDirs.description%",
          "scope": "window"
        },
        "cmake.emscriptenSearchDirs": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "%cmake-tools.configuration.cmake.searchDirs.items.description%"
          },
          "default": [],
          "description": "%cmake-tools.configuration.cmake.emscriptenSearchDirs.description%",
          "scope": "window"
        },
        "cmake.mergedCompileCommands": {
          "type": "string",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.mergedCompileCommands.description%",
          "scope": "resource"
        },
        "cmake.copyCompileCommands": {
          "type": "string",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.copyCompileCommands.description%",
          "scope": "resource"
        },
        "cmake.configureOnOpen": {
          "type": "boolean",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.configureOnOpen.description%",
          "scope": "resource"
        },
        "cmake.configureOnEdit": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.configureOnEdit.description%",
          "scope": "resource"
        },
        "cmake.setBuildTypeOnMultiConfig": {
          "type": "boolean",
          "default": false,
          "description": "%cmake-tools.configuration.cmake.setBuildTypeOnMultiConfig.description%",
          "scope": "resource"
        },
        "cmake.skipConfigureIfCachePresent": {
          "type": "boolean",
          "default": null,
          "description": "%cmake-tools.configuration.cmake.skipConfigureIfCachePresent.description%",
          "scope": "resource"
        },
        "cmake.cmakeCommunicationMode": {
          "type": "string",
          "default": "automatic",
          "enum": [
            "legacy",
            "serverApi",
            "fileApi",
            "automatic"
          ],
          "description": "%cmake-tools.configuration.cmake.cmakeCommunicationMode%",
          "scope": "resource"
        },
        "cmake.showSystemKits": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.showSystemKits.description%",
          "scope": "resource"
        },
        "cmake.ignoreKitEnv": {
          "type": "boolean",
          "default": false,
          "description": "%cmake-tools.configuration.cmake.ignoreKitEnv.description%",
          "scope": "resource"
        },
        "cmake.buildTask": {
          "type": "boolean",
          "default": false,
          "description": "%cmake-tools.configuration.cmake.buildTask.description%",
          "scope": "resource"
        },
        "cmake.outputLogEncoding": {
          "type": "string",
          "default": "auto",
          "description": "%cmake-tools.configuration.cmake.outputLogEncoding.description%",
          "scope": "window"
        },
        "cmake.enableTraceLogging": {
          "type": "boolean",
          "default": false,
          "description": "%cmake-tools.configuration.cmake.enableTraceLogging.description%",
          "scope": "window"
        },
        "cmake.loggingLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "trace",
            "debug",
            "info",
            "note",
            "warning",
            "error",
            "fatal"
          ],
          "scope": "window"
        },
        "cmake.touchbar.visibility": {
          "type": "string",
          "default": "default",
          "description": "%cmake-tools.configuration.cmake.touchbar.visibility.description%",
          "enum": [
            "default",
            "hidden"
          ],
          "enumDescriptions": [
            "%cmake-tools.configuration.cmake.touchbar.visibility.default.description%",
            "%cmake-tools.configuration.cmake.touchbar.visibility.hidden.description%"
          ],
          "scope": "window"
        },
        "cmake.touchbar.advanced": {
          "type": "object",
          "scope": "window",
          "properties": {
            "build": {
              "type": "string",
              "default": "default",
              "description": "%cmake-tools.configuration.cmake.touchbar.visibility.description%",
              "enum": [
                "default",
                "hidden"
              ],
              "enumDescriptions": [
                "%cmake-tools.configuration.cmake.touchbar.visibility.default.description%",
                "%cmake-tools.configuration.cmake.touchbar.visibility.hidden.description%"
              ]
            },
            "configure": {
              "type": "string",
              "default": "default",
              "description": "%cmake-tools.configuration.cmake.touchbar.visibility.description%",
              "enum": [
                "default",
                "hidden"
              ],
              "enumDescriptions": [
                "%cmake-tools.configuration.cmake.touchbar.visibility.default.description%",
                "%cmake-tools.configuration.cmake.touchbar.visibility.hidden.description%"
              ]
            },
            "debug": {
              "type": "string",
              "default": "default",
              "description": "%cmake-tools.configuration.cmake.touchbar.visibility.description%",
              "enum": [
                "default",
                "hidden"
              ],
              "enumDescriptions": [
                "%cmake-tools.configuration.cmake.touchbar.visibility.default.description%",
                "%cmake-tools.configuration.cmake.touchbar.visibility.hidden.description%"
              ]
            },
            "launch": {
              "type": "string",
              "default": "default",
              "description": "%cmake-tools.configuration.cmake.touchbar.visibility.description%",
              "enum": [
                "default",
                "hidden"
              ],
              "enumDescriptions": [
                "%cmake-tools.configuration.cmake.touchbar.visibility.default.description%",
                "%cmake-tools.configuration.cmake.touchbar.visibility.hidden.description%"
              ]
            }
          }
        },
        "cmake.statusbar.visibility": {
          "type": "string",
          "default": "default",
          "description": "%cmake-tools.configuration.cmake.statusbar.visibility.description%",
          "enum": [
            "default",
            "compact",
            "icon",
            "hidden"
          ],
          "scope": "window"
        },
        "cmake.statusbar.advanced": {
          "type": "object",
          "default": {},
          "description": "%cmake-tools.configuration.cmake.statusbar.advanced.description%",
          "properties": {
            "configurePreset": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                },
                "length": {
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.length.description%",
                  "type": "integer",
                  "default": 20
                }
              }
            },
            "buildPreset": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                },
                "length": {
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.length.description%",
                  "type": "integer",
                  "default": 20
                }
              }
            },
            "testPreset": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                },
                "length": {
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.length.description%",
                  "type": "integer",
                  "default": 20
                }
              }
            },
            "kit": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                },
                "length": {
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.length.description%",
                  "type": "integer",
                  "default": 20
                }
              }
            },
            "status": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                }
              }
            },
            "workspace": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                }
              }
            },
            "buildTarget": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                }
              }
            },
            "build": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                }
              }
            },
            "launchTarget": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                }
              }
            },
            "debug": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                }
              }
            },
            "launch": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                }
              }
            },
            "ctest": {
              "type": "object",
              "properties": {
                "visibility": {
                  "type": "string",
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.visibility.description%",
                  "enum": [
                    "default",
                    "compact",
                    "icon",
                    "hidden"
                  ]
                },
                "color": {
                  "type": "boolean",
                  "default": false,
                  "description": "%cmake-tools.configuration.cmake.statusbar.advanced.ctest.color.description%"
                }
              }
            }
          }
        },
        "cmake.additionalKits": {
          "type": "array",
          "default": [],
          "description": "%cmake-tools.configuration.cmake.additionalKits.description%",
          "items": {
            "type": "string"
          },
          "scope": "resource"
        },
        "cmake.revealLog": {
          "type": "string",
          "default": "always",
          "enum": [
            "focus",
            "always",
            "never"
          ],
          "enumDescriptions": [
            "%cmake-tools.configuration.cmake.revealLog.focus.description%",
            "%cmake-tools.configuration.cmake.revealLog.always.description%",
            "%cmake-tools.configuration.cmake.revealLog.never.description%"
          ],
          "description": "%cmake-tools.configuration.cmake.revealLog.description%"
        },
        "cmake.exportCompileCommandsFile": {
          "type": "boolean",
          "default": true,
          "description": "%cmake-tools.configuration.cmake.exportCompileCommandsFile.description%"
        },
        "cmake.useCMakePresets": {
          "type": "string",
          "enum": [
            "always",
            "never",
            "auto"
          ],
          "default": "auto",
          "description": "%cmake-tools.configuration.cmake.useCMakePresets.description%",
          "scope": "resource"
        },
        "cmake.allowCommentsInPresetsFile": {
          "type": "boolean",
          "default": false,
          "description": "%cmake-tools.configuration.cmake.allowCommentsInPresetsFile.description%",
          "scope": "resource"
        },
        "cmake.launchBehavior": {
          "type": "string",
          "enum": [
            "reuseTerminal",
            "breakAndReuseTerminal",
            "newTerminal"
          ],
          "markdownEnumDescriptions": [
            "%cmake-tools.configuration.cmake.launchBehavior.reuseTerminal.markdownDescriptions%",
            "%cmake-tools.configuration.cmake.launchBehavior.breakAndReuseTerminal.markdownDescriptions%",
            "%cmake-tools.configuration.cmake.launchBehavior.newTerminal.markdownDescriptions%"
          ],
          "description": "%cmake-tools.configuration.cmake.launchBehavior.description%",
          "default": "reuseTerminal"
        },
        "cmake.ignoreCMakeListsMissing": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "%cmake-tools.configuration.cmake.ignoreCMakeListsMissing.description%",
          "scope": "resource"
        },


        "cpp.path": {
          "type": "string",
          "description": "C/C++ binaries path. By default, the global search for the compiler and other utilities is used."
        },
        "cpp.LSP_args": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Arguments for language server."
        },
        "cpp.dbgAdapterEnv": {
          "description": "Extra environment variables for the debug adapter.",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          },
          "default": {},
          "scope": "resource"
        },
        "cpp.dbgAdapterVerbose": {
          "description": "Turns on verbose debug adapter logging.",
          "type": "boolean",
          "default": false,
          "scope": "resource"
        }
      }
    },
    "debuggers": [
      {
        "type": "powercpp",
        "label": "PowerTech C/C++ Debugger",
        "languages": [
          "c",
          "cpp",
          "objective-c",
          "objective-cpp"
        ],
        "configurationAttributes": {
          "launch": {
            "properties": {
              "program": {
                "description": "Path to the program to debug.",
                "type": "string",
                "default": ""
              },
              "args": {
                "description": "Program arguments.",
                "type": [
                  "array",
                  "string"
                ],
                "default": []
              },
              "cwd": {
                "description": "Program working directory.",
                "type": "string",
                "default": "${workspaceFolder}"
              },
              "env": {
                "description": "Additional environment variables.",
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": "string"
                  }
                },
                "default": {}
              },
              "stdio": {
                "description": "Destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.",
                "type": [
                  "null",
                  "string",
                  "array",
                  "object"
                ],
                "default": null
              },
              "terminal": {
                "description": "Terminal type to use.",
                "type": "string",
                "enum": [
                  "integrated",
                  "external",
                  "console"
                ],
                "enumDescriptions": [
                  "Use integrated terminal in VSCode.",
                  "Use external terminal window.",
                  "Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."
                ],
                "default": "integrated"
              },
              "console": {
                "description": "Terminal type to use. (This setting is a compatibility alias of 'terminal'.)",
                "type": "string",
                "enum": [
                  "integratedTerminal",
                  "externalTerminal",
                  "internalConsole"
                ],
                "enumDescriptions": [
                  "Use integrated terminal in VSCode.",
                  "Use external terminal window.",
                  "Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."
                ]
              },
              "stopOnEntry": {
                "description": "Automatically stop debuggee after launch.",
                "type": "boolean",
                "default": true
              },
              "initCommands": {
                "description": "Initialization commands executed upon debugger startup.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "preRunCommands": {
                "description": "Commands executed just before the program is launched.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "postRunCommands": {
                "description": "Commands executed just after the program has been launched.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "exitCommands": {
                "description": "Commands executed at the end of debugging session.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "expressions": {
                "description": "The default evaluator type used for expressions.",
                "type": "string",
                "enum": [
                  "simple",
                  "python",
                  "native"
                ]
              },
              "sourceMap": {
                "description": "Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.",
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "default": {}
              },
              "relativePathBase": {
                "description": "Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".",
                "type": "string"
              },
              "sourceLanguages": {
                "description": "A list of source languages to enable language-specific features for.",
                "type": "array",
                "default": []
              },
              "reverseDebugging": {
                "description": "Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).",
                "type": "boolean",
                "default": false
              }
            }
          },
          "attach": {
            "properties": {
              "program": {
                "description": "Path to the program to attach to.",
                "type": "string"
              },
              "pid": {
                "description": "Process id to attach to.",
                "type": [
                  "number",
                  "string"
                ],
                "default": "${command:pickMyProcess}"
              },
              "stopOnEntry": {
                "description": "Automatically stop debuggee after attach.",
                "type": "boolean",
                "default": true
              },
              "waitFor": {
                "description": "Wait for the process to launch (MacOS only).",
                "type": "boolean",
                "default": true
              },
              "initCommands": {
                "description": "Initialization commands executed upon debugger startup.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "preRunCommands": {
                "description": "Commands executed just before the program is attached to.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "postRunCommands": {
                "description": "Commands executed just after the program has been attached to.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "exitCommands": {
                "description": "Commands executed at the end of debugging session.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "expressions": {
                "description": "The default evaluator type used for expressions.",
                "type": "string",
                "enum": [
                  "simple",
                  "python",
                  "native"
                ]
              },
              "sourceMap": {
                "description": "Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.",
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "default": {}
              },
              "sourceLanguages": {
                "description": "A list of source languages to enable language-specific features for.",
                "type": "array",
                "default": []
              },
              "reverseDebugging": {
                "description": "Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).",
                "type": "boolean",
                "default": false
              }
            }
          },
          "custom": {
            "properties": {
              "initCommands": {
                "description": "Initialization commands executed upon debugger startup.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "targetCreateCommands": {
                "description": "Commands that create a debug target.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "processCreateCommands": {
                "description": "Commands that create debuggee process.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "exitCommands": {
                "description": "Commands executed at the end of debugging session.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "expressions": {
                "description": "The default evaluator type used for expressions.",
                "type": "string",
                "enum": [
                  "simple",
                  "python",
                  "native"
                ]
              },
              "sourceMap": {
                "description": "Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.",
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "default": {}
              },
              "relativePathBase": {
                "description": "Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".",
                "type": "string"
              },
              "sourceLanguages": {
                "description": "A list of source languages to enable language-specific features for.",
                "type": "array",
                "default": []
              },
              "reverseDebugging": {
                "description": "Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).",
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "configurationSnippets": [
          {
            "label": "C/C++: Debug Auto",
            "description": "Launch a new instance of the automatically identified program.",
            "body": {
              "name": "Debug",
              "type": "powercpp",
              "request": "launch"
            }
          },
          {
            "label": "C/C++: Debug Program",
            "description": "Launch a new instance of the specified program.",
            "body": {
              "name": "Debug",
              "type": "powercpp",
              "request": "launch",
              "program": "^\"\\${workspaceFolder}/${1:<program>}\"",
              "args": [],
              "cwd": "^\"\\${workspaceFolder}\""
            }
          },
          {
            "label": "C/C++: Debug running by Path",
            "description": "Attach to a running instance of the specified program.",
            "body": {
              "name": "Attach",
              "type": "powercpp",
              "request": "attach",
              "program": "^\"\\${workspaceFolder}/${1:<program>}\""
            }
          },
          {
            "label": "C/C++: Debug running by PID",
            "description": "Attach to a running process with the specified process id.",
            "body": {
              "name": "Attach PID",
              "type": "powercpp",
              "request": "attach",
              "pid": "^\"\\${command:pickMyProcess}\" // use \\${command:pickProcess} to pick other users' processes"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.73.0",
    "@types/glob": "^8.0.0",
    "@types/ajv": "^0.0.5",
    "@types/mocha": "^10.0.0",
    "@types/json5": "~0.0.30",
    "@types/node": "~14.14.28",
    "@typescript-eslint/eslint-plugin": "^5.42.0",
    "@typescript-eslint/parser": "^5.42.0",
    "@vscode/debugadapter-testsupport": "^1.51.0",
    "@vscode/debugprotocol": "^1.53.0",
    "eslint": "^8.26.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.8.4",
    "ts-loader": "^9.4.1",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0",
    "@vscode/test-electron": "^2.2.0",
    "vscode-cpptools": "^6.1.0",
    "vscode-nls-dev": "^3.3.2"
  },
  "dependencies": {
    "ajv": "^7.1.0",
    "abort-controller": "^3.0.0",
    "vscode-languageclient": "8.0.2",
    "string-argv": "^0.3.1",
    "yaml": "^1.10.0",
    "yauzl": "^2.10.0",
    "json5": "^2.2.0",
    "open": "^7.4.1",
    "@vscode/extension-telemetry": "^0.6.2",
    "vscode-nls": "^5.0.0",
    "vscode-tas-client": "^0.1.22"
  }
}