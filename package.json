{
  "name": "powercpp",
  "displayName": "PowerTech C/C++",
  "description": "Powerful C/C++ Extension for Modern Developers",
  "version": "0.0.0",
  "publisher": "PowerTech",
  "author": {
    "name": "PowerTech - https://powertech.center"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/powertech-center/vscode-cpp"
  },
  "bugs": {
    "url": "https://github.com/powertech-center/vscode-cpp/issues"
  },
  "homepage": "https://powertech.center/clang",
  "keywords": [],
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "icon.jpg",
  "activationEvents": [
    "workspaceContains:CMakeLists.txt",
    "onLanguage:cmake",
    "workspaceContains:build.ninja",
    "onLanguage:ninja",
    "workspaceContains:build.Makefile",
    "workspaceContains:build.makefile",
    "workspaceContains:build.GNUmakefile",
    "onLanguage:makefile"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "cmake",
        "extensions": [
          ".cmake"
        ],
        "filenames": [
          "CMakelists.txt"
        ],
        "aliases": [
          "CMake"
        ]
      },
      {
        "id": "ninja",
        "extensions": [
          ".ninja"
        ],
        "configuration": "./languages/ninja-configuration.json",
        "aliases": [
          "Ninja"
        ]
      },
      {
        "id": "makefile",
        "filenames": [
            "Makefile",
            "makefile",
            "GNUmakefile"
        ],
        "firstLine": "^#!\\s*/usr/bin/make",
        "configuration": "./language/make-configuration.json",
        "aliases": [
          "Makefile"
        ]
    }
    ],
    "grammars": [
      {
        "language": "cmake",
        "scopeName": "source.cmake",
        "path": "languages/CMake.tmLanguage"
      },
      {
        "language": "ninja",
        "scopeName": "source.ninja",
        "path": "./languages/ninja.tmLanguage"
      },
      {
        "language": "makefile",
        "scopeName": "source.makefile",
        "path": "./languages/make.tmLanguage.json",
        "tokenTypes": {
            "string.interpolated": "other"
        }
      }
    ],
    "commands": [
      {
        "command": "cpp.cmakeClean",
        "title": "CMake: Clean"
      },
      {
        "command": "cpp.cmakeRelease",
        "title": "CMake: Build CMAKE_BUILD_TYPE=Release"
      },
      {
        "command": "cpp.cmakeDebug",
        "title": "CMake: Debug after build CMAKE_BUILD_TYPE=Debug"
      },
      {
        "command": "cpp.cmakeRebug",
        "title": "CMake: Debug after build CMAKE_BUILD_TYPE=RelWithDebInfo"
      },
      {
        "command": "cpp.cmakeMinimize",
        "title": "CMake: Build CMAKE_BUILD_TYPE=MinSizeRel"
      },
      {
        "command": "cpp.ninjaClean",
        "title": "Ninja: Clean"
      },
      {
        "command": "cpp.ninjaRelease",
        "title": "Ninja: Build Release"
      },
      {
        "command": "cpp.ninjaDebug",
        "title": "Ninja: Debug after build Debug"
      },
      {
        "command": "cpp.makefileClean",
        "title": "Makefile: Clean"
      },
      {
        "command": "cpp.makefileRelease",
        "title": "Makefile: Build Release"
      },
      {
        "command": "cpp.makefileDebug",
        "title": "Makefile: Debug after build Debug"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "cpp.cmakeClean",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeRelease",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeDebug",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeRebug",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.cmakeMinimize",
          "when": "cmake:isPoject || editorLangId == cmake"
        },
        {
          "command": "cpp.ninjaClean",
          "when": "ninja:isPoject || editorLangId == ninja"
        },
        {
          "command": "cpp.ninjaRelease",
          "when": "ninja:isPoject || editorLangId == ninja"
        },
        {
          "command": "cpp.ninjaDebug",
          "when": "ninja:isPoject || editorLangId == ninja"
        },
        {
          "command": "cpp.makefileClean",
          "when": "makefile:isPoject || editorLangId == makefile"
        },
        {
          "command": "cpp.makefileRelease",
          "when": "makefile:isPoject || editorLangId == makefile"
        },
        {
          "command": "cpp.makefileDebug",
          "when": "makefile:isPoject || editorLangId == makefile"
        }
      ]
    },
    "configuration": {
      "title": "C/C++",
      "properties": {
        "cpp.path": {
          "type": "string",
          "description": "C/C++ binaries path. By default, the global search for the compiler and other utilities is used."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.73.0",
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.0",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.42.0",
    "@typescript-eslint/parser": "^5.42.0",
    "eslint": "^8.26.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.8.4",
    "ts-loader": "^9.4.1",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0",
    "@vscode/test-electron": "^2.2.0"
  }
}